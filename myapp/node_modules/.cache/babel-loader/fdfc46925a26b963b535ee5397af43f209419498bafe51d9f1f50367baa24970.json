{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\MAINFORM\\\\myapp\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  var _errors$projectid, _errors$projectid2, _errors$metadata;\n  // const { register, handleSubmit, errors } = useForm();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-left font-weight-bold text-dark\",\n        children: \"Terraform - GCE Infrastructure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-group-prepend\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputGroupSelect01\",\n              className: \"text-secondary\",\n              children: \"Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"custom-select\",\n            id: \"inputGroupSelect01\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"India\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"US\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Japan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectid\",\n            children: \"Project ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"projectid\",\n            className: \"form-control\",\n            ...register(\"projectid\", {\n              required: {\n                value: true,\n                message: \"projectid is required\"\n              },\n              pattern: {\n                value: /^[a-zA-Z]+$/,\n                // Define your pattern here\n                message: \"projectid must contain only letters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: (_errors$projectid = errors.projectid) === null || _errors$projectid === void 0 ? void 0 : _errors$projectid.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameprefix\",\n            children: \"Name Prefix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nameprefix\",\n            className: \"form-control\",\n            ...register(\"nameprefix\", {\n              required: {\n                value: true,\n                message: \"nameprefix is required\"\n              },\n              pattern: {\n                value: /^[a-zA-Z]+$/,\n                // Define your pattern here\n                message: \"projectid must contain only letters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: (_errors$projectid2 = errors.projectid) === null || _errors$projectid2 === void 0 ? void 0 : _errors$projectid2.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"metadata\",\n            children: \"Metadata\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"metadata\",\n            className: \"form-control\",\n            ...register(\"metadata\", {\n              required: {\n                value: true,\n                message: \"metadata is required\"\n              },\n              pattern: {\n                value: /^[a-zA-Z]+$/,\n                // Define your pattern here\n                message: \"metadata must contain only letters\"\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: (_errors$metadata = errors.metadata) === null || _errors$metadata === void 0 ? void 0 : _errors$metadata.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Form, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","_errors$projectid","_errors$projectid2","_errors$metadata","register","handleSubmit","formState","errors","onSubmit","data","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","for","id","selected","value","htmlFor","type","required","message","pattern","projectid","metadata","_c","$RefreshReg$"],"sources":["C:/projects/MAINFORM/myapp/src/components/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function Form() {\r\n  // const { register, handleSubmit, errors } = useForm();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <h4 className=\"text-left font-weight-bold text-dark\">\r\n          Terraform - GCE Infrastructure\r\n        </h4>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6\">\r\n            <div class=\"input-group-prepend\">\r\n              <label for=\"inputGroupSelect01\" className=\"text-secondary\">\r\n                Region\r\n              </label>\r\n            </div>\r\n            <select class=\"custom-select\" id=\"inputGroupSelect01\">\r\n              <option selected></option>\r\n              <option value=\"1\">India</option>\r\n              <option value=\"2\">US</option>\r\n              <option value=\"3\">Japan</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <label htmlFor=\"projectid\">Project ID</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"projectid\"\r\n              className=\"form-control\"\r\n              {...register(\"projectid\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"projectid is required\",\r\n                },\r\n                pattern: {\r\n                  value: /^[a-zA-Z]+$/, // Define your pattern here\r\n                  message: \"projectid must contain only letters\",\r\n                },\r\n              })}\r\n            />\r\n            <p className=\"error\">{errors.projectid?.message}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n            <label htmlFor=\"nameprefix\">Name Prefix</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nameprefix\"\r\n              className=\"form-control\"\r\n              {...register(\"nameprefix\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"nameprefix is required\",\r\n                },\r\n                pattern: {\r\n                  value: /^[a-zA-Z]+$/, // Define your pattern here\r\n                  message: \"projectid must contain only letters\",\r\n                },\r\n              })}\r\n            />\r\n            <p className=\"error\">{errors.projectid?.message}</p>\r\n\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n            <label htmlFor=\"metadata\">Metadata</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"metadata\"\r\n              className=\"form-control\"\r\n              {...register(\"metadata\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"metadata is required\",\r\n                },\r\n                pattern: {\r\n                  value: /^[a-zA-Z]+$/, // Define your pattern here\r\n                  message: \"metadata must contain only letters\",\r\n                },\r\n              })}\r\n            />\r\n            <p className=\"error\">{errors.metadata?.message}</p>\r\n\r\n            </div>\r\n            \r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}