{"ast":null,"code":"import React from \"react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\n// export default function Form() {\n//   const {\n//     register,\n//     handleSubmit,\n//     reset,\n//     formState: { errors },\n//   } = useForm();\n\n//   const [keyFields, setKeyFields] = useState([{ id: 0 }]);\n//   // const onSubmit = (data) => {\n//   //   console.log(\"Form Data:\", data);\n//   //   reset(); // Reset form after successful submission\n//   // };\n//   // const onSubmit = (data, e) => console.log(data, e)\n\n//   const onSubmit = (data, e) => {\n//     e.preventDefault(); // Prevent default form submission\n//     console.log(\"Form Data:\", data);\n//     alert(JSON.stringify(data));\n//     reset(); // Reset form after successful submission\n//   };\n\n//   const handleAddKeyField = (event) => {\n//     // event.preventDefault()\n//     const newKeyFields = [...keyFields];\n//     newKeyFields.push({ id: newKeyFields.length });\n//     //console.log(newKeyFields);\n//     setKeyFields(newKeyFields);\n//   };\n\n//   const handleDeleteKeyField = (id) => {\n//     const updatedKeyFields = keyFields.filter((field) => field.id !== id);\n//     setKeyFields(updatedKeyFields);\n//   };\n\n//   return (\n\n//     // <form className=\"mr4 pr-4 \" onSubmit={handleSubmit(onSubmit)}>\n//     //   <div className=\"container-fluid\">\n//     //     <h4 className=\"text-left font-weight-bold text-dark\">\n//     //       Terraform - GCE Infrastructure\n//     //     </h4>\n//     //   </div>\n//     //   {/* <form className=\"mr4 pr-4 \" onSubmit={handleSubmit(onSubmit)}> */}\n//     //     <div className=\"container-fluid mr-2\">\n//     //       <div className=\"row\">\n//     //         <div className=\"col-sm-6\">\n//     //           <div className=\"input-group-prepend\">\n//     //             <label htmlFor=\"region\" className=\"text-secondary \">\n//     //               Region\n//     //             </label>\n//     //           </div>\n//     //           <select\n//     //             id=\"region\"\n//     //             className={\"custom-select form-control\"}\n//     //             {...register(\"region\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"Region is required\",\n//     //               },\n//     //             })}\n//     //           >\n//     //             <option value=\"\"></option>\n//     //             <option value=\"1\">India</option>\n//     //             <option value=\"2\">US</option>\n//     //             <option value=\"3\">Japan</option>\n//     //           </select>\n//     //           {errors.region && (\n//     //             <div className=\"error text-danger\">{errors.region.message}</div>\n//     //           )}\n//     //         </div>\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"projectid\" className=\"text-secondary \">\n//     //             Project ID\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"projectid\"\n//     //             className=\"form-control\"\n//     //             {...register(\"projectid\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"projectid is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^[0-9]+$/, // Define your pattern here\n//     //                 message: \"projectid must contain only numbers\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">{errors.projectid?.message}</p>\n//     //         </div>\n//     //       </div>\n//     //       <div className=\"row\">\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"nameprefix\" className=\"text-secondary\">\n//     //             Name Prefix\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"nameprefix\"\n//     //             className=\"form-control\"\n//     //             {...register(\"nameprefix\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"nameprefix is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^[a-zA-Z]+$/, // Define your pattern here\n//     //                 message: \"nameprefix must contain only letters\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">{errors.nameprefix?.message}</p>\n//     //         </div>\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"metadata\" className=\"text-secondary\">\n//     //             Metadata\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"metadata\"\n//     //             className=\"form-control\"\n//     //             {...register(\"metadata\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"metadata is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^[a-zA-Z]+$/, // Define your pattern here\n//     //                 message: \"metadata must contain only letters\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">{errors.metadata?.message}</p>\n//     //         </div>\n//     //       </div>\n//     //       <div className=\"row\">\n//     //         <div className=\"col-sm-6\">\n//     //           <div className=\"input-group-prepend\">\n//     //             <label htmlFor=\"machinetype\" className=\"text-secondary\">\n//     //               Machine Type\n//     //             </label>\n//     //           </div>\n//     //           <select\n//     //             id=\"machinetype\"\n//     //             className={\"custom-select form-control\"}\n//     //             {...register(\"machinetype\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"machinetype is required\",\n//     //               },\n//     //             })}\n//     //           >\n//     //             <option value=\"\"></option>\n//     //             <option value=\"1\">windows</option>\n//     //             <option value=\"2\">Linux</option>\n//     //             <option value=\"3\">MAC</option>\n//     //           </select>\n//     //           {errors.machinetype && (\n//     //             <div className=\"error text-danger\">\n//     //               {errors.machinetype.message}\n//     //             </div>\n//     //           )}\n//     //         </div>\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"sourceimageproject\" className=\"text-secondary\">\n//     //             Source Image Project\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"sourceimageproject\"\n//     //             className=\"form-control\"\n//     //             {...register(\"sourceimageproject\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"sourceimageproject is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^(ftp|http|https):\\/\\/[^ \"]+$/,\n//     //                 message: \"Please enter a valid URL\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">{errors.projectid?.message}</p>\n//     //         </div>\n//     //       </div>\n//     //       <div className=\"row\">\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"sourceimage\" className=\"text-secondary\">\n//     //             Source Image\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"sourceimage\"\n//     //             className=\"form-control\"\n//     //             {...register(\"sourceimage\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"sourceimage is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^(ftp|http|https):\\/\\/[^ \"]+$/,\n//     //                 message: \"Please enter a valid URL\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">{errors.sourceimage?.message}</p>\n//     //         </div>\n//     //         <div className=\"col-sm-6\">\n//     //           <div className=\"input-group-prepend\">\n//     //             <label htmlFor=\"disktype\" className=\"text-secondary\">\n//     //               Disk Type\n//     //             </label>\n//     //           </div>\n//     //           <select\n//     //             id=\"disktype\"\n//     //             className={\"custom-select form-control\"}\n//     //             {...register(\"disktype\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"disktype is required\",\n//     //               },\n//     //             })}\n//     //           >\n//     //             <option value=\"\"></option>\n//     //             <option value=\"1\">Disk C</option>\n//     //             <option value=\"2\">Disk S</option>\n//     //             <option value=\"3\">Disk D</option>\n//     //           </select>\n//     //           {errors.disktype && (\n//     //             <div className=\"error text-danger\">\n//     //               {errors.disktype.message}\n//     //             </div>\n//     //           )}\n//     //         </div>\n//     //       </div>\n//     //       <div className=\"row\">\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"disksize\" className=\"text-secondary\">\n//     //             Disk Size (GB)\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"disksize\"\n//     //             className=\"form-control\"\n//     //             {...register(\"disksize\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"disksize is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^\\d+GB$/,\n//     //                 message:\n//     //                   \"Please enter a valid disk size in GB format (e.g., 500GB)\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">{errors.disksize?.message}</p>\n//     //         </div>\n//     //         <div className=\"col-sm-6\">\n//     //           <div className=\"input-group-prepend\">\n//     //             <label htmlFor=\"autodelete\" className=\"text-secondary\">\n//     //               Auto Delete\n//     //             </label>\n//     //           </div>\n//     //           <select\n\n//     //             id=\"autodelete\"\n//     //             className={\"custom-select form-control\"}\n//     //             {...register(\"autodelete\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"autodelete is required\",\n//     //               },\n//     //             })}\n//     //           >\n//     //             <option value=\"\"></option>\n//     //             <option value=\"1\">True</option>\n//     //             <option value=\"2\">False</option>\n//     //           </select>\n//     //           {errors.autodelete && (\n//     //             <div className=\"error text-danger\">\n//     //               {errors.autodelete.message}\n//     //             </div>\n//     //           )}\n//     //         </div>\n//     //       </div>\n//     //       <div className=\"row\">\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"disklabels\" className=\"text-secondary\">\n//     //             Disk Labels\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"disklabels\"\n//     //             className=\"form-control\"\n//     //             {...register(\"disklabels\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"disklabels is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^[a-zA-Z]+$/,\n//     //                 message: \"disklabels must contain only letters\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">{errors.nameprefix?.message}</p>\n//     //         </div>\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"mincpuplatform\" className=\"text-secondary\">\n//     //             Min CPU Platform\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"mincpuplatform\"\n//     //             className=\"form-control\"\n//     //             {...register(\"mincpuplatform\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"mincpuplatform is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^[a-zA-Z]+$/,\n//     //                 message: \"mincpuplatform must contain only letters\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">\n//     //             {errors.mincpuplatform?.message}\n//     //           </p>\n//     //         </div>\n//     //       </div>\n//     //       <div className=\"row\">\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"resourcepolicies\" className=\"text-secondary\">\n//     //             Resource Policies\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"resourcepolicies\"\n//     //             className=\"form-control\"\n//     //             {...register(\"resourcepolicies\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"resourcepolicies is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^[a-zA-Z]+$/,\n//     //                 message: \"resourcepolicies must contain only letters\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">\n//     //             {errors.resourcepolicies?.message}\n//     //           </p>\n//     //         </div>\n//     //         <div className=\"col-sm-6\">\n//     //           <div className=\"input-group-prepend\">\n//     //             <label\n//     //               htmlFor=\"enablenestedvirtualization\"\n//     //               className=\"text-secondary\"\n//     //             >\n//     //               Enable Nested Virtualization\n//     //             </label>\n//     //           </div>\n//     //           <select\n//     //             id=\"enablenestedvirtualization\"\n//     //             className={\"custom-select form-control\"}\n//     //             {...register(\"enablenestedvirtualization\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"enablenestedvirtualization is required\",\n//     //               },\n//     //             })}\n//     //           >\n//     //             <option value=\"\"></option>\n//     //             <option value=\"1\">True</option>\n//     //             <option value=\"2\">False</option>\n//     //           </select>\n//     //           {errors.enablenestedvirtualization && (\n//     //             <div className=\"error text-danger\">\n//     //               {errors.enablenestedvirtualization.message}\n//     //             </div>\n//     //           )}\n//     //         </div>\n//     //       </div>\n//     //       <div className=\"row\">\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"stacktype\" className=\"text-secondary\">\n//     //             Stack Type\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"stacktype\"\n//     //             className=\"form-control\"\n//     //             {...register(\"stacktype\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"stacktype is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^[a-zA-Z]+$/,\n//     //                 message: \"stacktypemust contain only letters\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">\n//     //             {errors.resourcepolicies?.message}\n//     //           </p>\n//     //         </div>\n\n//     //         <div className=\"col-sm-6\">\n//     //           <label htmlFor=\"threadspercore\" className=\"text-secondary \">\n//     //             Threads per Core\n//     //           </label>\n//     //           <input\n//     //             type=\"text\"\n//     //             id=\"threadspercore\"\n//     //             className=\"form-control\"\n//     //             {...register(\"threadspercore\", {\n//     //               required: {\n//     //                 value: true,\n//     //                 message: \"threadspercore is required\",\n//     //               },\n//     //               pattern: {\n//     //                 value: /^[0-9]+$/, // Define your pattern here\n//     //                 message: \"threadspercore must contain only numbers\",\n//     //               },\n//     //             })}\n//     //           />\n//     //           <p className=\"error text-danger\">\n//     //             {errors.threadspercore?.message}\n//     //           </p>\n//     //         </div>\n//     //       </div>\n\n//     //       <div className=\"container-fluid\">\n//     //         <div className=\"d-flex flex-row mb-2\">\n//     //           <div className=\"\">\n//     //             <p className=\"font-weight-bold text-dark\">Tags</p>\n//     //           </div>\n//     //           <div className=\"  rounded  ml-2 \">\n//     //             <button\n//     //               className=\"btn-warning rounded \"\n//     //               style={{ width: \"30px\", height: \"35px\" }}\n//     //               onClick={handleAddKeyField}\n//     //             >\n//     //               <FontAwesomeIcon className=\"\" icon={faPlus} />\n//     //             </button>\n//     //           </div>\n//     //         </div>\n\n//     //         {keyFields.map((field) => (\n//     //           <div className=\"row mb-2\" key={field.id}>\n//     //             <div className=\"col-sm-5\">\n//     //               <select className=\"custom-select\" id=\"key\" >\n//     //                 <option value=\"\">Choose Key</option>\n//     //                 <option value=\"1\">key1</option>\n//     //                 <option value=\"2\">key2</option>\n\n//     //               </select>\n\n//     //             </div>\n//     //             <div className=\"col-sm-5\">\n//     //               <input type=\"text\" className=\"form-control\" />\n//     //             </div>\n//     //             <div>\n//     //               <button\n//     //                 className=\"btn btn-danger rounded  \"\n//     //                 style={{ width: \"35px\", height: \"42px\" }}\n//     //                 onClick={() => handleDeleteKeyField(field.id)}\n//     //               >\n//     //                 <FontAwesomeIcon icon={faTimes} />\n//     //               </button>\n//     //             </div>\n//     //           </div>\n//     //         ))}\n\n//     //         <div className=\"d-flex flex-row mb-4\">\n//     //           <div className=\"mr-3\">\n//     //             <button\n//     //               type=\"button\"\n//     //               className=\"btn btn-outline-dark \"\n//     //               style={{ width: \"90px\", height: \"35px\" }}\n//     //             >\n//     //               Cancel\n//     //             </button>\n//     //           </div>\n//     //           <div>\n//     //             <button\n//     //               type=\"submit\"\n//     //               className=\"btn btn-outline-warning \"\n//     //               style={{ width: \"90px\", height: \"35px\" }}\n\n//     //             >\n//     //               Save\n//     //             </button>\n//     //           </div>\n//     //         </div>\n//     //       </div>\n//     //     </div>\n//     //   </form>\n\n//   );\n// }","map":{"version":3,"names":["React","useState","useForm","FontAwesomeIcon","faTimes","faPlus"],"sources":["C:/projects/MAINFORM/myapp/src/components/Form.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// export default function Form() {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     reset,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n\r\n//   const [keyFields, setKeyFields] = useState([{ id: 0 }]);\r\n//   // const onSubmit = (data) => {\r\n//   //   console.log(\"Form Data:\", data);\r\n//   //   reset(); // Reset form after successful submission\r\n//   // };\r\n//   // const onSubmit = (data, e) => console.log(data, e)\r\n\r\n//   const onSubmit = (data, e) => {\r\n//     e.preventDefault(); // Prevent default form submission\r\n//     console.log(\"Form Data:\", data);\r\n//     alert(JSON.stringify(data));\r\n//     reset(); // Reset form after successful submission\r\n//   };\r\n  \r\n\r\n\r\n//   const handleAddKeyField = (event) => {\r\n//     // event.preventDefault()\r\n//     const newKeyFields = [...keyFields];\r\n//     newKeyFields.push({ id: newKeyFields.length });\r\n//     //console.log(newKeyFields);\r\n//     setKeyFields(newKeyFields);\r\n//   };\r\n\r\n//   const handleDeleteKeyField = (id) => {\r\n//     const updatedKeyFields = keyFields.filter((field) => field.id !== id);\r\n//     setKeyFields(updatedKeyFields);\r\n//   };\r\n\r\n//   return (\r\n    \r\n//     // <form className=\"mr4 pr-4 \" onSubmit={handleSubmit(onSubmit)}>\r\n//     //   <div className=\"container-fluid\">\r\n//     //     <h4 className=\"text-left font-weight-bold text-dark\">\r\n//     //       Terraform - GCE Infrastructure\r\n//     //     </h4>\r\n//     //   </div>\r\n//     //   {/* <form className=\"mr4 pr-4 \" onSubmit={handleSubmit(onSubmit)}> */}\r\n//     //     <div className=\"container-fluid mr-2\">\r\n//     //       <div className=\"row\">\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <div className=\"input-group-prepend\">\r\n//     //             <label htmlFor=\"region\" className=\"text-secondary \">\r\n//     //               Region\r\n//     //             </label>\r\n//     //           </div>\r\n//     //           <select\r\n//     //             id=\"region\"\r\n//     //             className={\"custom-select form-control\"}\r\n//     //             {...register(\"region\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"Region is required\",\r\n//     //               },\r\n//     //             })}\r\n//     //           >\r\n//     //             <option value=\"\"></option>\r\n//     //             <option value=\"1\">India</option>\r\n//     //             <option value=\"2\">US</option>\r\n//     //             <option value=\"3\">Japan</option>\r\n//     //           </select>\r\n//     //           {errors.region && (\r\n//     //             <div className=\"error text-danger\">{errors.region.message}</div>\r\n//     //           )}\r\n//     //         </div>\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"projectid\" className=\"text-secondary \">\r\n//     //             Project ID\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"projectid\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"projectid\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"projectid is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^[0-9]+$/, // Define your pattern here\r\n//     //                 message: \"projectid must contain only numbers\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">{errors.projectid?.message}</p>\r\n//     //         </div>\r\n//     //       </div>\r\n//     //       <div className=\"row\">\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"nameprefix\" className=\"text-secondary\">\r\n//     //             Name Prefix\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"nameprefix\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"nameprefix\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"nameprefix is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^[a-zA-Z]+$/, // Define your pattern here\r\n//     //                 message: \"nameprefix must contain only letters\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">{errors.nameprefix?.message}</p>\r\n//     //         </div>\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"metadata\" className=\"text-secondary\">\r\n//     //             Metadata\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"metadata\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"metadata\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"metadata is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^[a-zA-Z]+$/, // Define your pattern here\r\n//     //                 message: \"metadata must contain only letters\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">{errors.metadata?.message}</p>\r\n//     //         </div>\r\n//     //       </div>\r\n//     //       <div className=\"row\">\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <div className=\"input-group-prepend\">\r\n//     //             <label htmlFor=\"machinetype\" className=\"text-secondary\">\r\n//     //               Machine Type\r\n//     //             </label>\r\n//     //           </div>\r\n//     //           <select\r\n//     //             id=\"machinetype\"\r\n//     //             className={\"custom-select form-control\"}\r\n//     //             {...register(\"machinetype\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"machinetype is required\",\r\n//     //               },\r\n//     //             })}\r\n//     //           >\r\n//     //             <option value=\"\"></option>\r\n//     //             <option value=\"1\">windows</option>\r\n//     //             <option value=\"2\">Linux</option>\r\n//     //             <option value=\"3\">MAC</option>\r\n//     //           </select>\r\n//     //           {errors.machinetype && (\r\n//     //             <div className=\"error text-danger\">\r\n//     //               {errors.machinetype.message}\r\n//     //             </div>\r\n//     //           )}\r\n//     //         </div>\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"sourceimageproject\" className=\"text-secondary\">\r\n//     //             Source Image Project\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"sourceimageproject\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"sourceimageproject\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"sourceimageproject is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^(ftp|http|https):\\/\\/[^ \"]+$/,\r\n//     //                 message: \"Please enter a valid URL\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">{errors.projectid?.message}</p>\r\n//     //         </div>\r\n//     //       </div>\r\n//     //       <div className=\"row\">\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"sourceimage\" className=\"text-secondary\">\r\n//     //             Source Image\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"sourceimage\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"sourceimage\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"sourceimage is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^(ftp|http|https):\\/\\/[^ \"]+$/,\r\n//     //                 message: \"Please enter a valid URL\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">{errors.sourceimage?.message}</p>\r\n//     //         </div>\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <div className=\"input-group-prepend\">\r\n//     //             <label htmlFor=\"disktype\" className=\"text-secondary\">\r\n//     //               Disk Type\r\n//     //             </label>\r\n//     //           </div>\r\n//     //           <select\r\n//     //             id=\"disktype\"\r\n//     //             className={\"custom-select form-control\"}\r\n//     //             {...register(\"disktype\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"disktype is required\",\r\n//     //               },\r\n//     //             })}\r\n//     //           >\r\n//     //             <option value=\"\"></option>\r\n//     //             <option value=\"1\">Disk C</option>\r\n//     //             <option value=\"2\">Disk S</option>\r\n//     //             <option value=\"3\">Disk D</option>\r\n//     //           </select>\r\n//     //           {errors.disktype && (\r\n//     //             <div className=\"error text-danger\">\r\n//     //               {errors.disktype.message}\r\n//     //             </div>\r\n//     //           )}\r\n//     //         </div>\r\n//     //       </div>\r\n//     //       <div className=\"row\">\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"disksize\" className=\"text-secondary\">\r\n//     //             Disk Size (GB)\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"disksize\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"disksize\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"disksize is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^\\d+GB$/,\r\n//     //                 message:\r\n//     //                   \"Please enter a valid disk size in GB format (e.g., 500GB)\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">{errors.disksize?.message}</p>\r\n//     //         </div>\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <div className=\"input-group-prepend\">\r\n//     //             <label htmlFor=\"autodelete\" className=\"text-secondary\">\r\n//     //               Auto Delete\r\n//     //             </label>\r\n//     //           </div>\r\n//     //           <select\r\n                \r\n//     //             id=\"autodelete\"\r\n//     //             className={\"custom-select form-control\"}\r\n//     //             {...register(\"autodelete\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"autodelete is required\",\r\n//     //               },\r\n//     //             })}\r\n//     //           >\r\n//     //             <option value=\"\"></option>\r\n//     //             <option value=\"1\">True</option>\r\n//     //             <option value=\"2\">False</option>\r\n//     //           </select>\r\n//     //           {errors.autodelete && (\r\n//     //             <div className=\"error text-danger\">\r\n//     //               {errors.autodelete.message}\r\n//     //             </div>\r\n//     //           )}\r\n//     //         </div>\r\n//     //       </div>\r\n//     //       <div className=\"row\">\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"disklabels\" className=\"text-secondary\">\r\n//     //             Disk Labels\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"disklabels\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"disklabels\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"disklabels is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^[a-zA-Z]+$/,\r\n//     //                 message: \"disklabels must contain only letters\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">{errors.nameprefix?.message}</p>\r\n//     //         </div>\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"mincpuplatform\" className=\"text-secondary\">\r\n//     //             Min CPU Platform\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"mincpuplatform\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"mincpuplatform\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"mincpuplatform is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^[a-zA-Z]+$/,\r\n//     //                 message: \"mincpuplatform must contain only letters\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">\r\n//     //             {errors.mincpuplatform?.message}\r\n//     //           </p>\r\n//     //         </div>\r\n//     //       </div>\r\n//     //       <div className=\"row\">\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"resourcepolicies\" className=\"text-secondary\">\r\n//     //             Resource Policies\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"resourcepolicies\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"resourcepolicies\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"resourcepolicies is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^[a-zA-Z]+$/,\r\n//     //                 message: \"resourcepolicies must contain only letters\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">\r\n//     //             {errors.resourcepolicies?.message}\r\n//     //           </p>\r\n//     //         </div>\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <div className=\"input-group-prepend\">\r\n//     //             <label\r\n//     //               htmlFor=\"enablenestedvirtualization\"\r\n//     //               className=\"text-secondary\"\r\n//     //             >\r\n//     //               Enable Nested Virtualization\r\n//     //             </label>\r\n//     //           </div>\r\n//     //           <select\r\n//     //             id=\"enablenestedvirtualization\"\r\n//     //             className={\"custom-select form-control\"}\r\n//     //             {...register(\"enablenestedvirtualization\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"enablenestedvirtualization is required\",\r\n//     //               },\r\n//     //             })}\r\n//     //           >\r\n//     //             <option value=\"\"></option>\r\n//     //             <option value=\"1\">True</option>\r\n//     //             <option value=\"2\">False</option>\r\n//     //           </select>\r\n//     //           {errors.enablenestedvirtualization && (\r\n//     //             <div className=\"error text-danger\">\r\n//     //               {errors.enablenestedvirtualization.message}\r\n//     //             </div>\r\n//     //           )}\r\n//     //         </div>\r\n//     //       </div>\r\n//     //       <div className=\"row\">\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"stacktype\" className=\"text-secondary\">\r\n//     //             Stack Type\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"stacktype\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"stacktype\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"stacktype is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^[a-zA-Z]+$/,\r\n//     //                 message: \"stacktypemust contain only letters\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">\r\n//     //             {errors.resourcepolicies?.message}\r\n//     //           </p>\r\n//     //         </div>\r\n\r\n//     //         <div className=\"col-sm-6\">\r\n//     //           <label htmlFor=\"threadspercore\" className=\"text-secondary \">\r\n//     //             Threads per Core\r\n//     //           </label>\r\n//     //           <input\r\n//     //             type=\"text\"\r\n//     //             id=\"threadspercore\"\r\n//     //             className=\"form-control\"\r\n//     //             {...register(\"threadspercore\", {\r\n//     //               required: {\r\n//     //                 value: true,\r\n//     //                 message: \"threadspercore is required\",\r\n//     //               },\r\n//     //               pattern: {\r\n//     //                 value: /^[0-9]+$/, // Define your pattern here\r\n//     //                 message: \"threadspercore must contain only numbers\",\r\n//     //               },\r\n//     //             })}\r\n//     //           />\r\n//     //           <p className=\"error text-danger\">\r\n//     //             {errors.threadspercore?.message}\r\n//     //           </p>\r\n//     //         </div>\r\n//     //       </div>\r\n\r\n         \r\n//     //       <div className=\"container-fluid\">\r\n//     //         <div className=\"d-flex flex-row mb-2\">\r\n//     //           <div className=\"\">\r\n//     //             <p className=\"font-weight-bold text-dark\">Tags</p>\r\n//     //           </div>\r\n//     //           <div className=\"  rounded  ml-2 \">\r\n//     //             <button\r\n//     //               className=\"btn-warning rounded \"\r\n//     //               style={{ width: \"30px\", height: \"35px\" }}\r\n//     //               onClick={handleAddKeyField}\r\n//     //             >\r\n//     //               <FontAwesomeIcon className=\"\" icon={faPlus} />\r\n//     //             </button>\r\n//     //           </div>\r\n//     //         </div>\r\n\r\n//     //         {keyFields.map((field) => (\r\n//     //           <div className=\"row mb-2\" key={field.id}>\r\n//     //             <div className=\"col-sm-5\">\r\n//     //               <select className=\"custom-select\" id=\"key\" >\r\n//     //                 <option value=\"\">Choose Key</option>\r\n//     //                 <option value=\"1\">key1</option>\r\n//     //                 <option value=\"2\">key2</option>\r\n\r\n\r\n//     //               </select>\r\n                  \r\n//     //             </div>\r\n//     //             <div className=\"col-sm-5\">\r\n//     //               <input type=\"text\" className=\"form-control\" />\r\n//     //             </div>\r\n//     //             <div>\r\n//     //               <button\r\n//     //                 className=\"btn btn-danger rounded  \"\r\n//     //                 style={{ width: \"35px\", height: \"42px\" }}\r\n//     //                 onClick={() => handleDeleteKeyField(field.id)}\r\n//     //               >\r\n//     //                 <FontAwesomeIcon icon={faTimes} />\r\n//     //               </button>\r\n//     //             </div>\r\n//     //           </div>\r\n//     //         ))}\r\n\r\n//     //         <div className=\"d-flex flex-row mb-4\">\r\n//     //           <div className=\"mr-3\">\r\n//     //             <button\r\n//     //               type=\"button\"\r\n//     //               className=\"btn btn-outline-dark \"\r\n//     //               style={{ width: \"90px\", height: \"35px\" }}\r\n//     //             >\r\n//     //               Cancel\r\n//     //             </button>\r\n//     //           </div>\r\n//     //           <div>\r\n//     //             <button\r\n//     //               type=\"submit\"\r\n//     //               className=\"btn btn-outline-warning \"\r\n//     //               style={{ width: \"90px\", height: \"35px\" }}\r\n                  \r\n//     //             >\r\n//     //               Save\r\n//     //             </button>\r\n//     //           </div>\r\n//     //         </div>\r\n//     //       </div>\r\n//     //     </div>\r\n//     //   </form>\r\n    \r\n   \r\n//   );\r\n// }\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,EAAEC,MAAM,QAAQ,mCAAmC;;AAEnignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}